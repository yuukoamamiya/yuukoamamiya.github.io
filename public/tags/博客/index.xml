<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>博客 on Yuko&#39;s Blog</title>
        <link>https://yuukoamamiya.github.io/tags/%E5%8D%9A%E5%AE%A2/</link>
        <description>Recent content in 博客 on Yuko&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <lastBuildDate>Mon, 17 May 2021 22:19:00 +0800</lastBuildDate><atom:link href="https://yuukoamamiya.github.io/tags/%E5%8D%9A%E5%AE%A2/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>关于我被github封号这件事</title>
        <link>https://yuukoamamiya.github.io/p/%E5%85%B3%E4%BA%8E%E6%88%91%E8%A2%ABgithub%E5%B0%81%E5%8F%B7%E8%BF%99%E4%BB%B6%E4%BA%8B/</link>
        <pubDate>Mon, 17 May 2021 22:19:00 +0800</pubDate>
        
        <guid>https://yuukoamamiya.github.io/p/%E5%85%B3%E4%BA%8E%E6%88%91%E8%A2%ABgithub%E5%B0%81%E5%8F%B7%E8%BF%99%E4%BB%B6%E4%BA%8B/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210517225938.jpg" alt="Featured image of post 关于我被github封号这件事" /&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210517222454.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;说实话，就github竟然会封人这一点来讲，我也是第一次听说。之前只听说过有个讲国内政治的仓库用中国ip是访问不了的，还听说过github被微软收购之后响应特朗普政策ban了伊朗ip，但是还真没想到铁拳终有一天会落在我头上。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210517222803.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;至于被ban掉的原因，那也说不准。最有可能的自然是发了有版权的内容，被资产阶级法权给橄榄了。毕竟这个博客有《斜目而视》那个季广茂后记的基本所有内容，之前还弄着个人wiki的时候还有《导读弗洛伊德》的内容，还有个个人仓库里面传了一堆马克思的书。——如果是因为马克思而被橄榄的话那这下可就真的很搞笑了，实现了内容和形式的统一。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210517223151.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;当然这也只是猜测，真正的原因谁也说不准。人就轻飘飘地一句“参照社区规定”，提前连个招呼都不打不声不响就给你封了，提交申诉过了半个月都没人理，这下可刑不可知则威不可测了，法制史要考的。&lt;/p&gt;
&lt;p&gt;不过好在我的github账号里面也没什么东西，封了也就封了。本来无一物何处染尘埃。毕竟也不是什么程序员，github里面除了博客什么都没有，甚至就连博客都是本地有备份的，就像今天这样，注册一个新账户，把本地文件上传一下，立马又是个新博客。&lt;/p&gt;
&lt;p&gt;唯一的问题就是以前博客的配图没备份，这下可尴尬了，哈哈哈哈。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210517224502.gif&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;被封了之后琢磨还能用什么东西来搭博客，于是我考察了一下当下流行的博客工具：&lt;/p&gt;
&lt;p&gt;jekyll, hexo, hugo&amp;hellip;&lt;/p&gt;
&lt;p&gt;总而言之，你可以在github和github里面做自由选择&lt;/p&gt;
&lt;p&gt;有没有不用github的啊？有：&lt;/p&gt;
&lt;p&gt;wordpress.com, blogger&amp;hellip;&lt;/p&gt;
&lt;p&gt;总而言之，你可以在微软谷歌里面自由选择&lt;/p&gt;
&lt;p&gt;这下可真就印证了齐泽克的黑屁了，“先生，你可以选择自由主义和保守主义哦”“见鬼，我就不能选共产主义吗”，选来选去看似五彩斑斓五花十色，实际上都是一个味儿。&lt;/p&gt;
&lt;p&gt;最后没辙，还是重新注册了一个github的新账号（见鬼，和雨宫优子有关的用户名是一个都没给我留下），套用某个&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/zh-hans/%e6%b8%a9%e6%96%af%e9%a1%bf%c2%b7%e4%b8%98%e5%90%89%e5%b0%94&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;大傻逼&lt;/a&gt;的话说，这玩意不是个好东西，但是已经是坏东西里面最不坏的那个了。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>从Gridea迁移到Hugo</title>
        <link>https://yuukoamamiya.github.io/p/%E4%BB%8Egridea%E8%BF%81%E7%A7%BB%E5%88%B0hugo/</link>
        <pubDate>Thu, 28 Jan 2021 16:52:00 +0800</pubDate>
        
        <guid>https://yuukoamamiya.github.io/p/%E4%BB%8Egridea%E8%BF%81%E7%A7%BB%E5%88%B0hugo/</guid>
        <description>&lt;img src="https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210210222138.png" alt="Featured image of post 从Gridea迁移到Hugo" /&gt;&lt;p&gt;我之前写了&lt;a class=&#34;link&#34; href=&#34;https://yuukoamamiya.github.io/p/%E8%AE%B0%E4%B8%80%E6%AC%A1%E6%90%AC%E8%BF%81%E5%8D%9A%E5%AE%A2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;一篇博文&lt;/a&gt;来讲述我从 blogspot 转移到现在用的 github page ，那个时候用的生成工具是 Gridea ，我现在还觉得那玩意不错，什么都是傻瓜式的，也就第一次设置的时候要跟着教程来，麻烦点，设置好之后就可以看着GUI的脸色行事了。&lt;/p&gt;
&lt;p&gt;只不过后来是越用越觉得 Gridea 有各种各样的问题。我最讨厌的毒瘤框架自不必说，写了篇文章要生成个半天再同步个半天，还经常同步个半天没能 push 上去，就相当痛苦。正好这个时候有了 Github Actions ，如果是自建博客的话传个markdown文件就行，剩下的都是云端自动了，也犯不着在本地先执行什么 &lt;code&gt;hexo -d&lt;/code&gt; 再执行一下 &lt;code&gt;git&lt;/code&gt; ，最早制约我去自己折腾 hexo 一类工具的制约已经消失了。&lt;/p&gt;
&lt;h2 id=&#34;安装hugo&#34;&gt;安装Hugo&lt;/h2&gt;
&lt;p&gt;我得说我选择 Hugo 没有什么特别的理由，纯粹就是单纯图个装起来省事。我之前装好了包管理器 Chocolatey ，再装 Hugo 就一行命令的事情，而且装好了直接就已经是环境变量了，可以直接在命令行里执行 &lt;code&gt;hugo&lt;/code&gt; 命令，很方便。&lt;/p&gt;
&lt;p&gt;要紧的命令就这么两行：&lt;/p&gt;
&lt;p&gt;安装 Chocolatey （需要管理员权限 powershell）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Set-ExecutionPolicy Bypass -Scope &lt;span style=&#34;color:#66d9ef&#34;&gt;Process&lt;/span&gt; -Force; &lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Net.ServicePointManager]&lt;/span&gt;::SecurityProtocol = &lt;span style=&#34;color:#66d9ef&#34;&gt;[System.Net.ServicePointManager]&lt;/span&gt;::SecurityProtocol &lt;span style=&#34;color:#f92672&#34;&gt;-bor&lt;/span&gt; 3072; iex ((New-Object System.Net.WebClient).DownloadString(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://chocolatey.org/install.ps1&amp;#39;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装 Hugo&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco install hugo-extended
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这两个装上就够了，当然，要是像我这样没GUI就浑身难受的，那还可以再装个 Chocolatey GUI：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;choco install chocolateygui
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;装到这里就算是该装的软件都装过一遍了，那之后就是做博客了。&lt;/p&gt;
&lt;h2 id=&#34;创建博客&#34;&gt;创建博客&lt;/h2&gt;
&lt;p&gt;Hugo 里面新建工程的命令是&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-powershell&#34; data-lang=&#34;powershell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo new site my_blog
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在任意目录下运行，就可以看到生成了一个名为 &lt;code&gt;my_blog&lt;/code&gt; 的文件夹，这个文件夹里面自带了一些博客最基本的内容。Hugo 是不自带默认主题的，需要去下一个来。&lt;/p&gt;
&lt;p&gt;我下的是 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack&lt;/a&gt; 主题，自带一个&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/v/zh-cn/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;中文文档&lt;/a&gt;，一步一步照着文档来就行。下载最新 &lt;a class=&#34;link&#34; href=&#34;https://github.com/CaiJimmy/hugo-theme-stack/releases&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Release&lt;/a&gt; 之后下，把 &lt;code&gt;hugo-theme-stack-master&lt;/code&gt; 改名为 &lt;code&gt;hugo-theme-stack&lt;/code&gt; 并放到站点目录的 &lt;code&gt;theme&lt;/code&gt; 文件夹下。&lt;/p&gt;
&lt;p&gt;我这是个全新的博客，就如文档所言，把 &lt;code&gt;exampleSite&lt;/code&gt; 文件夹中的 &lt;code&gt;assets&lt;/code&gt; 和 &lt;code&gt;config.yaml&lt;/code&gt; 给复制到博客根目录下；博客根目录下原本有个 &lt;code&gt;config.toml&lt;/code&gt; ，理论上可以对着这两个文件依样画葫芦自己写配置文件，但是还是算了，嫌麻烦，直接给删了得了。&lt;/p&gt;
&lt;p&gt;不过网上能找到的一些修改功能的教程几乎都是基于 toml 的，有时候把格式改成 yaml 修修改改还能用，有时候就用不了，凑合凑合得了，也不用太讲究。&lt;/p&gt;
&lt;p&gt;以下设置过程中，全程时不时打开 &lt;code&gt;hugo server&lt;/code&gt; 看看对劲不对劲……&lt;/p&gt;
&lt;h2 id=&#34;配置主题&#34;&gt;配置主题&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;config.yaml&lt;/code&gt; 这个文件几乎是开箱即用的，但还是不少地方需要自己再设置过。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;params&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;mainSections&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#ae81ff&#34;&gt;post&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;featuredImageField&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;feature&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;rssFullContent&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;favicon&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210127185955.ico&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;featuredImageField&lt;/code&gt; 决定的是特色图片（题图）使用的字段。默认是 image ，我这里修改成了 feature ，因为从 Gridea 的 post 文件夹里拿出来的文件就是这样的。当然也可以批量修改，用 sublime text 就可以把整个文件夹里的 feature 字段全部改成 image ，不过我偷懒了一手，而且这么改目前看下来也没出啥毛病。能用就成。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rssFullContent&lt;/code&gt; 决定的是 rss 是否输出全文。 &lt;code&gt;favicon&lt;/code&gt; 决定了网站的图标，看着改就行。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;sidebar&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;emoji&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;🎷&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;subtitle&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;让无价值的灵魂去哭泣吧！&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;avatar&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;local&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;src&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;img/avatar.png&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一些个性化博客的设置。把博主头像放在根目录下的 &lt;code&gt;assets/img&lt;/code&gt; 里就成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;menu&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;identifier&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;link&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Link&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;link&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;weight&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;link&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        - &lt;span style=&#34;color:#f92672&#34;&gt;identifier&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;rss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Rss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;url&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;index.xml&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;weight&lt;/span&gt;: -&lt;span style=&#34;color:#ae81ff&#34;&gt;40&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;pre&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;rss&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;个性化菜单。&lt;/p&gt;
&lt;p&gt;原本的左侧菜单只有主页、关于、存档、搜索，这四个选项。我给加了友链和 rss 订阅这两个。&lt;/p&gt;
&lt;p&gt;当然这个时候菜单里面的东西都是不能用的，还需要再配置过。&lt;/p&gt;
&lt;p&gt;老样子还是从作者给的示范里面偷活，把 &lt;code&gt;exampleSite/content/page&lt;/code&gt; 整个文件夹拷到根目录的 &lt;code&gt;content&lt;/code&gt; 文件夹底下，搜索和存档是直接可以用了。&lt;code&gt;about.md&lt;/code&gt; 这个文件还得依样画葫芦自己写点东西上去（我之前甚至想不到写什么去别人博客里偷活233）， &lt;code&gt;link.md&lt;/code&gt; 也是一律。大佬们自然有办法手写点代码让友情链接的页面好看点，我是个粗人，拿 md 随手写写差不多了。rss 直接可以用了，不需要再创建了。&lt;/p&gt;
&lt;p&gt;不过这里有个问题是，生成的 rss 订阅地址是 &lt;code&gt;index.xml&lt;/code&gt; 而不是以前的 &lt;code&gt;atom.xml&lt;/code&gt; ，这就意味着以前的 rss 订阅地址就失效了。我也没什么好办法去解决。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Change it to your Disqus shortname before using&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;disqusShortname&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;yukoamamiya&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;comments&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;enabled&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;provider&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;disqus&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;评论系统设置 disqus 省事，就直接用了。 &lt;code&gt;disqusShortname&lt;/code&gt; 这个属性设置一下就行。&lt;/p&gt;
&lt;p&gt;这个主题支持 disqus 和 utterances 两套评论系统，后者是基于 github issue 的，要是我之前 gitalk 的数据还在我就用后者了。不过换成 Hugo 之后链接地址全变了，原先的 issue 也就对应不上了，算了算了，全扬了得了233&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;permalinks&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;post&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/p/:filename/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;page&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;/:slug/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这行代码决定的是生成的博文页面的 url 。&lt;/p&gt;
&lt;p&gt;Gridea 的逻辑是取文件名做链接，比如说 &lt;code&gt;aigis.md&lt;/code&gt; 这个文件最后生成的链接是 &lt;code&gt;xxx.github.io/post/aigis&lt;/code&gt; ，而 Hugo 的逻辑，至少按照这个主题原来的设置 &lt;code&gt;post: /p/:slug/&lt;/code&gt;来说是读文件的内容。如果有在 Front Matter 里面设置 &lt;code&gt;slug&lt;/code&gt; 字段的话，那就读取这个字段并生成地址，没有的话就读 &lt;code&gt;title&lt;/code&gt; ，那我从 Gridea 刚刚转过来的，哪里会设置这个字段嘛，结果就是前面的 &lt;code&gt;aigis.md&lt;/code&gt; 生成的链接成了 &lt;code&gt;xxx.github.io/p/千年战争&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;我把这段里面的 &lt;code&gt;slug&lt;/code&gt; 改成了 &lt;code&gt;filename&lt;/code&gt; 这个逻辑就和 Gridea 的对上了。当然，还有 p 和 post 的区别，不过这个我不打算改了。就那么几篇特定的博文用 &lt;code&gt;aliases&lt;/code&gt; 设置一下别名就成了。比如这样：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;aliases&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    - &lt;span style=&#34;color:#ae81ff&#34;&gt;/post/order-44/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20200429164034.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;反正 SEO 乱了也没什么，会点进来看的也就爱看个什么 TNO 魔怔 Order-44 啊，怒喷 MIUI 啊之类的，也就那么几篇，就连点进来看我睿评太宰治的都没几个。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/v/zh-cn/modify-theme/example-custom-font-family-for-article-content&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;修改字体&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;修改字体我几乎是从文档里面一字不落直接照搬了。不过我自己也确认不了思源宋体的效果，我这边直接本地强制把字体显示成 Ubuntu 了……&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/v/zh-cn/writing/gei-fen-lei-biao-qian-tian-jia-tu-pian-he-jian-jie&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;给分类 / 标签添加图片和简介&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;同样是照着文档来就行。在 &lt;code&gt;content/tags/标签名&lt;/code&gt; 下创建 &lt;code&gt;_index.md&lt;/code&gt;，然后写点迫真二次元内容。&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;科技&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;feature&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128122034.jpg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;description&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;你的XP系统有点问题，我已经帮你重装好了&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;显示效果是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128201948.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;迁移博文&#34;&gt;迁移博文&lt;/h2&gt;
&lt;p&gt;Gridea 的博文存放在其数据文件夹的 &lt;code&gt;\posts&lt;/code&gt; 子目录下，直接把里面的那堆博文复制到 &lt;code&gt;\content\post&lt;/code&gt; 下就能用。&lt;/p&gt;
&lt;p&gt;两者的 Front Matter 还是有些区别的，比如说 Hugo 的 &lt;code&gt;hidden: = flase&lt;/code&gt; 对应的是 Gridea 的 &lt;code&gt;hideInList: false&lt;/code&gt; ，不过总体而言差别不大。而且也可以用 sublime text 批量改整个文件夹。&lt;/p&gt;
&lt;p&gt;一个比较明显的区别在文章简介，在这个主题里面基本就是副标题。Hugo 的文章简介是用 &lt;code&gt;description&lt;/code&gt; 词条写的，而 Gridea 的则是靠 &lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt; 打标记。这个没啥批量改的法子，也许可以写脚本硬改，但是我这里文章虽然多，有副标题的也不怎么多，就硬改得了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128203433.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;我觉得最炫的是这个hhhhh&lt;/p&gt;
&lt;p&gt;&lt;del&gt;不过这篇博文是大一时候写的了，现在我看我也流泪啊&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;还有一个重大的问题是时间。&lt;/p&gt;
&lt;p&gt;Gridea 里面的时间格式是 &lt;code&gt;2021-01-28 16:52:00&lt;/code&gt; ，而 Hugo 的则是 &lt;code&gt;2021-01-28 16:52:00+0800&lt;/code&gt; ，两者几乎完全一样，就是 Hugo 的加上了时区信息。&lt;/p&gt;
&lt;p&gt;老的博文不写时区也无所谓，但是新的博文在写的时候一定要加上时区信息。如果不写的话，Hugo 会认为这是一篇发布时间在未来的博文而不给渲染……&lt;/p&gt;
&lt;h2 id=&#34;google-search-console&#34;&gt;Google Search Console&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128205719.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;如果是第一次向谷歌提交站点的话，这一步还是放在后面，等 Github Actions 设置好了再弄吧。我这里因为以前就设置过，现在重新提交一下站点地图就成。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128210146.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;站点地图的提交需要时间……估计现在在谷歌上搜 TNO 搜来我博客的，摁一下还是会看404……&lt;/p&gt;
&lt;h2 id=&#34;google-analytics&#34;&gt;Google Analytics&lt;/h2&gt;
&lt;p&gt;主题作者在文档里面也&lt;a class=&#34;link&#34; href=&#34;https://docs.stack.jimmycai.com/v/zh-cn/modify-theme&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;提了一嘴&lt;/a&gt;怎么设置，不过我还是跟着&lt;a class=&#34;link&#34; href=&#34;https://coreychen71.github.io/posts/2019-05/hugoaddgoogleanalytics/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;这个教程&lt;/a&gt;走的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128211634.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;没申请过 Google Analytics 服务的可以来 &lt;a class=&#34;link&#34; href=&#34;https://analytics.google.com/analytics/web/?authuser=0#provision/SignUp/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://analytics.google.com/analytics/web/?authuser=0#provision/SignUp/&lt;/a&gt; 先申请一个，我这边是已经申请好了，就差把代码嵌到博客里面去了。&lt;/p&gt;
&lt;p&gt;首先把跟踪 id 加到 &lt;code&gt;config.yaml&lt;/code&gt; 里面去。上面发的那个教程里用的是 toml ，和 yaml 的格式略有不同。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;googleAnalytics&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;UA-xxxxxxxxx-x&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后是把 &lt;code&gt;\themes\hugo-theme-stack\layouts\partials\head\head.html&lt;/code&gt; 复制到根目录下的 &lt;code&gt;\layouts\partials\head\head.html&lt;/code&gt; 里去。&lt;/p&gt;
&lt;p&gt;在这个文件里加上四行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ template &amp;#34;_internal/google_analytics_async.html&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if not .Site.IsServer }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ template &amp;#34;_internal/google_analytics_async.html&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;\layouts&lt;/code&gt; 目录下建立 &lt;code&gt;_internal&lt;/code&gt; 文件夹，并且再在其中创建 &lt;code&gt;google_analytics_async.html &lt;/code&gt; 文件，然后把我前面截图里面的全局网站代码（gtag.js）复制进去就成。&lt;/p&gt;
&lt;h2 id=&#34;设置github-actions&#34;&gt;设置Github Actions&lt;/h2&gt;
&lt;p&gt;首先是要准备 &lt;code&gt;&amp;lt;你的github用户名&amp;gt;.github.io&lt;/code&gt; 仓库，有一个 master 分支和一个 gh-pages 分支。&lt;/p&gt;
&lt;p&gt;然后把刚刚弄出来的那堆博客文件整个目录传到这个仓库的 master 分支上去——这个时候比较标准的解法是 &lt;code&gt;git push&lt;/code&gt; ，不过我能不用命令行肯定不用命令行的233&lt;/p&gt;
&lt;p&gt;我在这一步用的是 &lt;a class=&#34;link&#34; href=&#34;https://desktop.github.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Github Desktop&lt;/a&gt; 应用（没错，我甚至连 git 都没装）。&lt;/p&gt;
&lt;p&gt;这里要注意的是需要设置排除，根目录下创建一个文本文档并重命名为 &lt;code&gt;.gitignore&lt;/code&gt; ，写入以下内容：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/public/
/themes/*/.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后是申请 token，在 github 上依次点击 右上角你的头像 - Settings - Developer Settings - Personal access tokens，生成一个。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128220717.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;（我这里之前 Gridea 本来就要用的，直接用了之前那个）&lt;/p&gt;
&lt;p&gt;要注意的是这个 token 只会在这个时候给你看一次，丢了就是丢了，以后就再也不会再出现了。我推荐把这个给存到密码管理软件里面去，用 lastpass 之类的软件给管理起来。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128223012.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;回到 &lt;code&gt;&amp;lt;你的github用户名&amp;gt;.github.io&lt;/code&gt; 仓库，依次选择 Settings - Secret ，添加一个仓库密钥名为 &lt;code&gt;personal_token&lt;/code&gt; ，内容是刚刚的 token 复制进去。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128223513.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;回到仓库，依次点击 Actions - New wordflow - Set up a workflow yourself，然后把这堆我也是抄来的一大坨代码复制进去就好了。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy Hugo&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 任君喜欢&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;on&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;push&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;branches&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#ae81ff&#34;&gt;master  &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# master 更新触发&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;jobs&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;build-deploy&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;runs-on&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;ubuntu-18.04&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;steps&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;actions/checkout@v1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Setup Hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-hugo@v2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;hugo-version&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;latest&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Build &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Deploy&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;uses&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;with&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;personal_token&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ secrets.personal_token }}&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# personal_token&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_BRANCH&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;gh-pages &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# 推送到当前 gh-pages 分支&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;PUBLISH_DIR&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;./public &lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# hugo 生成到 public 作为跟目录&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;commit_message&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;${{ github.event.head_commit.message }}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;施工完毕&#34;&gt;施工完毕&lt;/h2&gt;
&lt;p&gt;事情到这一步，就算是施工完毕了。你可以在 master 分支随便进行一些改动来使得 Action 生效。我刚弄好的时候传了一个表情包上去然后删掉了（&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/yuukoamamiya/pic/master/20210128231609.jpg&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;之后再更新新的文章就直接把 .md 文件上传到 &lt;code&gt;\content\post&lt;/code&gt; 目录下就成，用网页传用命令行传用桌面应用传都没问题。改动之后会自动生成自动生效。已经难说和 Gridea 哪个方便哪个麻烦了。可能配置过程中还是 Gridea 更加傻瓜式一些，但是配置好之后还是这么整比较省事。&lt;/p&gt;
&lt;p&gt;就是手写 Front Matter 还有点麻烦，这个我还得再琢磨琢磨。比如说可以设置 Front Matter 的默认格式，再比如说可以用那种自定义短语的软件来辅助之类的，都还可以进一步研究。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
